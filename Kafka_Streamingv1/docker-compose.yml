version: '3'
services:

  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
    depends_on:
      - zookeeper
    networks:
      - spark_kafka
    healthcheck:
      test: "nc -z localhost 9092"
      interval: 10s
      timeout: 10s
      retries: 5

  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-2
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
    depends_on:
      - zookeeper
    networks:
      - spark_kafka
    healthcheck:
      test: "nc -z localhost 9093"
      interval: 10s
      timeout: 10s
      retries: 5

  kafka3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-3
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
    depends_on:
      - zookeeper
    networks:
      - spark_kafka
    healthcheck:
      test: "nc -z localhost 9094"
      interval: 10s
      timeout: 10s
      retries: 5

  init-kafka1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka1:
        condition: service_healthy
    networks:
      - spark_kafka
    command: >
      bash -c "echo 'Creation TOPICS : ' &&/usr/bin/kafka-topics --create --topic twitter --partitions 2 --replication-factor 3 --if-not-exists --bootstrap-server kafka1:9092"

  init-kafka2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka2:
        condition: service_healthy
    networks:
      - spark_kafka
    command: >
      bash -c "echo 'Creation TOPICS : ' && /usr/bin/kafka-topics --create --topic twitter --partitions 2 --replication-factor 3 --if-not-exists --bootstrap-server kafka2:9093"

  init-kafka3:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka3:
        condition: service_healthy
    networks:
      - spark_kafka
    command: >
      bash -c "echo 'Creation TOPICS : ' && /usr/bin/kafka-topics --create --topic twitter --partitions 2 --replication-factor 3 --if-not-exists --bootstrap-server kafka3:9094"

  zookeeper:
    image: zookeeper:3.7.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - spark_kafka

  producer:
    build:
      context: .
      dockerfile: producer.Dockerfile
    networks:
      - spark_kafka
    depends_on:
      - init-kafka1
      - init-kafka2
      - init-kafka3

  consumer:
    build:
      context: .
      dockerfile: consumer.Dockerfile
    networks:
      - spark_kafka
    depends_on:
      - init-kafka1
      - init-kafka2
      - init-kafka3
      - producer

networks:
  spark_kafka:
    driver: bridge
